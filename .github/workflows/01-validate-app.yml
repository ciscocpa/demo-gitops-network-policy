name: Validate App Manifests

on:
  pull_request:
    paths:
      - 'tenant-a/apps/**'
      - 'tenant-b/apps/**'
      - '.github/workflows/01-validate-app.yml'

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate Application Manifests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Validate YAML syntax
        run: |
          echo "## YAML Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          VALID=0
          INVALID=0

          for file in $(find tenant-a/apps tenant-b/apps -name "*.yaml" -o -name "*.yml" 2>/dev/null || true); do
            echo "Validating: $file"
            if ERROR=$(yq eval '.' "$file" 2>&1 > /dev/null); then
              echo "✅ $file" >> $GITHUB_STEP_SUMMARY
              ((VALID++))
            else
              echo "❌ $file - INVALID YAML: $ERROR" >> $GITHUB_STEP_SUMMARY
              echo "Error for $file: $ERROR"
              ((INVALID++))
            fi
          done

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Summary:** $VALID valid, $INVALID invalid" >> $GITHUB_STEP_SUMMARY

          if [ $INVALID -gt 0 ]; then
            exit 1
          fi

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Validate Kubernetes manifests
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Kubernetes Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if kubectl apply --dry-run=client -f tenant-a/apps/ -f tenant-b/apps/ 2>&1 | tee /tmp/kubectl-output.txt; then
            echo "✅ All manifests are valid Kubernetes resources" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some manifests have errors:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat /tmp/kubectl-output.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Check for best practices
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Best Practices Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          WARNINGS=0

          # Check for resource limits
          if ! grep -rq "resources:" tenant-a/apps/ tenant-b/apps/ 2>/dev/null; then
            echo "⚠️ No resource limits defined" >> $GITHUB_STEP_SUMMARY
            ((WARNINGS++))
          fi

          # Check for liveness/readiness probes
          if ! grep -rq "livenessProbe:" tenant-a/apps/ tenant-b/apps/ 2>/dev/null; then
            echo "⚠️ No liveness probes defined" >> $GITHUB_STEP_SUMMARY
            ((WARNINGS++))
          fi

          if [ $WARNINGS -eq 0 ]; then
            echo "✅ All best practices checks passed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ✅ App Manifest Validation Complete\n\n${summary}\n\n*Validation passed - app changes look good!*`
            });
